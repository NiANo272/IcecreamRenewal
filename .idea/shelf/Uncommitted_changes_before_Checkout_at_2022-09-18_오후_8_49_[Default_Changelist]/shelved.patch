Index: app/src/main/java/com/example/icecream_renual/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.icecream_renual;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.GridView;\r\nimport android.widget.HorizontalScrollView;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport java.io.File;\r\nimport java.io.FilenameFilter;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\n\r\nimport androidx.databinding.DataBindingUtil;\r\nimport com.example.icecream_renual.databinding.ActivityMainBinding;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener{\r\n\r\n    ActivityMainBinding b;\r\n\r\n    private GridView gridView_cold;\r\n    private GridView gridView_warm;\r\n    private GridView gridView_freeze;\r\n    private GridViewAdapter adapter_cold;\r\n    private GridViewAdapter adapter_warm;\r\n    private GridViewAdapter adapter_freeze;\r\n    //파일 경로\r\n    private String path = \"/data/data/com.example.icecream_renual/files/\";\r\n    //파일 이름 저장\r\n    File file = new File(path);\r\n\r\n    int sort_state = 0; // 0 : default , 1 : name, 2 : date\r\n\r\n    Func func = new Func();\r\n\r\n    Boolean isAllFabVisible;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        b = DataBindingUtil.setContentView(this,R.layout.activity_main);\r\n//        setContentView(R.layout.activity_main1);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onResume(){\r\n        super.onResume();\r\n        //버튼 생성 및 OnclickListner 선언\r\n\r\n        b.fabAdd.setVisibility(View.GONE);\r\n        b.fabCancel.setVisibility(View.GONE);\r\n        b.fabSort.setVisibility(View.GONE);\r\n\r\n        isAllFabVisible = false;\r\n\r\n        b.fabMain.setOnClickListener(this);\r\n        b.fabAdd.setOnClickListener(this);\r\n        b.fabCancel.setOnClickListener(this);\r\n        b.fabSort.setOnClickListener(this);\r\n        b.btnNotification.setOnClickListener(this);\r\n        b.btnSetting.setOnClickListener(this);\r\n\r\n        //GridView에 아이콘 생성\r\n        adapter_cold = new GridViewAdapter();\r\n        adapter_warm = new GridViewAdapter();\r\n        adapter_freeze = new GridViewAdapter();\r\n        gridView_cold = (GridView) findViewById(R.id.field_cold);\r\n        gridView_warm = (GridView) findViewById(R.id.field_warm);\r\n        gridView_freeze = (GridView) findViewById(R.id.field_freeze);\r\n\r\n        //파일 읽기\r\n        FilenameFilter filter = new FilenameFilter() {\r\n            @Override\r\n            public boolean accept(File file, String s) {\r\n                return s.contains(\".txt\");\r\n            }\r\n        };\r\n        String[] fileNames = file.list(filter);\r\n        if (fileNames.length > 0) {\r\n            for (int i = 0; i < (fileNames.length); i++) {\r\n                String rFile = func.readFile(path + fileNames[i]);\r\n                //읽어온 파일 나누기\r\n                String[] txt_split = rFile.split(\"\\\\|\");\r\n                String name = txt_split[0];\r\n                int year = Integer.parseInt(txt_split[1]);\r\n                int month = Integer.parseInt(txt_split[2]);\r\n                int day = Integer.parseInt(txt_split[3]);\r\n                int quantity = Integer.parseInt(txt_split[4]);\r\n                String category = txt_split[5];\r\n\r\n                if(category.equals(\"냉장\")){\r\n                    adapter_cold.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                    gridView_cold.setAdapter(adapter_cold);\r\n                }\r\n                else if(category.equals(\"상온\")){\r\n                    adapter_warm.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                    gridView_warm.setAdapter(adapter_warm);\r\n                }\r\n                else if(category.equals(\"냉동\")){\r\n                    adapter_freeze.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                    gridView_freeze.setAdapter(adapter_freeze);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n<<<<<<< HEAD\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        b.fabAdd.setVisibility(View.GONE);\r\n        b.fabCancel.setVisibility(View.GONE);\r\n        b.fabSort.setVisibility(View.GONE);\r\n//        overridePendingTransition(0,0);\r\n    }\r\n=======\r\n//    @Override\r\n//    protected void onPause() {\r\n//        super.onPause();\r\n//        overridePendingTransition(0,0);\r\n//    }\r\n>>>>>>> WM\r\n\r\n    public void onClick(View v){ //implements View.OnClickListner 추가 필요\r\n\r\n        if(!isAllFabVisible){\r\n            b.fabAdd.show();\r\n            b.fabCancel.show();\r\n            b.fabSort.show();\r\n            isAllFabVisible = true;\r\n\r\n        }\r\n        else{\r\n            b.fabAdd.hide();\r\n            b.fabCancel.hide();\r\n            b.fabSort.hide();\r\n            isAllFabVisible = false;\r\n        }\r\n\r\n        if(v.getId() == R.id.fab_add){\r\n            startActivity(new Intent(this, AddActivity.class));\r\n        }\r\n\r\n        if(v.getId() == R.id.fab_cancel){\r\n\r\n        }\r\n\r\n        if(v.getId() == R.id.fab_sort){\r\n            if(sort_state == 0){\r\n                sort_state = 1;\r\n                adapter_cold = new GridViewAdapter();\r\n                adapter_warm = new GridViewAdapter();\r\n                adapter_freeze = new GridViewAdapter();\r\n\r\n                FilenameFilter filter = new FilenameFilter() {\r\n                    @Override\r\n                    public boolean accept(File file, String name) {\r\n                        return name.contains(\".txt\");\r\n                    }\r\n                };\r\n                String[] fileName = file.list(filter);\r\n                Arrays.sort(fileName);\r\n                if (fileName.length > 0) {\r\n                    for (int i = 0; i < (fileName.length); i++) {\r\n                        String rFile = func.readFile(path + fileName[i]);\r\n                        //읽어온 파일 나누기\r\n                        String[] txt_split = rFile.split(\"\\\\|\");\r\n                        String name = txt_split[0];\r\n                        int year = Integer.parseInt(txt_split[1]);\r\n                        int month = Integer.parseInt(txt_split[2]);\r\n                        int day = Integer.parseInt(txt_split[3]);\r\n                        int quantity = Integer.parseInt(txt_split[4]);\r\n                        String category = txt_split[5];\r\n\r\n                        if(category.equals(\"냉장\")){\r\n                            adapter_cold.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                            gridView_cold.setAdapter(adapter_cold);\r\n                        }\r\n                        else if(category.equals(\"상온\")){\r\n                            adapter_warm.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                            gridView_warm.setAdapter(adapter_warm);\r\n                        }\r\n                        else if(category.equals(\"냉동\")){\r\n                            adapter_freeze.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                            gridView_freeze.setAdapter(adapter_freeze);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if(sort_state == 1){\r\n                sort_state = 0;\r\n                gridView_cold.setAdapter(null);\r\n                adapter_cold = new GridViewAdapter();\r\n                adapter_warm = new GridViewAdapter();\r\n                adapter_freeze = new GridViewAdapter();\r\n\r\n                FilenameFilter filter = new FilenameFilter() {\r\n                    @Override\r\n                    public boolean accept(File file, String name) {\r\n                        return name.contains(\".txt\");\r\n                    }\r\n                };\r\n                String[] fileName = file.list(filter);\r\n                if (fileName.length > 0) {\r\n                    for (int i = 0; i < (fileName.length); i++) {\r\n                        String rFile = func.readFile(path + fileName[i]);\r\n                        //읽어온 파일 나누기\r\n                        String[] txt_split = rFile.split(\"\\\\|\");\r\n                        String name = txt_split[0];\r\n                        int year = Integer.parseInt(txt_split[1]);\r\n                        int month = Integer.parseInt(txt_split[2]);\r\n                        int day = Integer.parseInt(txt_split[3]);\r\n                        int quantity = Integer.parseInt(txt_split[4]);\r\n                        String category = txt_split[5];\r\n\r\n                        if(category.equals(\"냉장\")){\r\n                            adapter_cold.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                            gridView_cold.setAdapter(adapter_cold);\r\n                        }\r\n\r\n                        else if(category.equals(\"상온\")){\r\n                            adapter_warm.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                            gridView_warm.setAdapter(adapter_warm);\r\n                        }\r\n                        else if(category.equals(\"냉동\")){\r\n                            adapter_freeze.addItem(new ItemData(name, category, year, month, day, R.mipmap.ic_launcher));\r\n                            gridView_freeze.setAdapter(adapter_freeze);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(v.getId() == R.id.btn_notification){\r\n            startActivity(new Intent(this, NotificationActivity.class));\r\n            overridePendingTransition(0,0);\r\n        }\r\n\r\n        if(v.getId() == R.id.btn_setting){\r\n            startActivity(new Intent(this, SettingActivity.class));\r\n            overridePendingTransition(0,0);\r\n        }\r\n    }\r\n\r\n    //어댑터\r\n    public class GridViewAdapter extends BaseAdapter {\r\n        String TAG = MainActivity.class.getSimpleName();\r\n        ArrayList<ItemData> item = new ArrayList<ItemData>();\r\n\r\n        @Override\r\n        public int getCount() {\r\n            return item.size();\r\n        }\r\n\r\n        @Override\r\n        public Object getItem(int i) {\r\n            return item.get(i);\r\n        }\r\n\r\n        @Override\r\n        public long getItemId(int i) {\r\n            return i;\r\n        }\r\n\r\n        public void addItem(ItemData add_item) {\r\n            item.add(add_item);\r\n        }\r\n\r\n        @Override\r\n        public View getView(int i, View view, ViewGroup viewGroup) {\r\n            final Context context = viewGroup.getContext();\r\n            final ItemData itemData = item.get(i);\r\n\r\n            if (view == null) {\r\n                LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n                view = inflater.inflate(R.layout.activity_item_icon, viewGroup, false);\r\n\r\n                TextView tv_icon = (TextView) view.findViewById(R.id.foodicon);\r\n                TextView tv_name = (TextView) view.findViewById(R.id.tv_foodname);\r\n                TextView tv_quantity = (TextView) view.findViewById(R.id.tv_foodname);\r\n\r\n//                tv_icon.setImageResource(itemData.getResId());\r\n                tv_name.setText(itemData.getName());\r\n//                tv_quantity.setText(itemData.get);\r\n                view.setBackgroundResource(R.drawable.red_ddaylist);\r\n\r\n                Log.d(TAG, \"getView() - [ \" + i + \" ] \" + itemData.getName());\r\n            } else {\r\n                View view_123 = new View(context);\r\n                view_123 = (View) view;\r\n            }\r\n\r\n            //아이콘 클릭시 Info 팝업 생성\r\n            view.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    item_info i_info = new item_info();\r\n                    i_info.setNameText(itemData.getName());\r\n                    startActivity(new Intent(view.getContext(), item_info.class));\r\n                    //intent 애니메이션 효과\r\n                    overridePendingTransition(R.anim.translate_up, R.anim.re_alpha);\r\n                }\r\n            });\r\n\r\n            return view;\r\n        }\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/icecream_renual/MainActivity.java b/app/src/main/java/com/example/icecream_renual/MainActivity.java
--- a/app/src/main/java/com/example/icecream_renual/MainActivity.java	(revision d36402bf907ce3b5bcf8e9f30fa5ae8cc1fb4aec)
+++ b/app/src/main/java/com/example/icecream_renual/MainActivity.java	(date 1663501752972)
@@ -117,7 +117,6 @@
         }
     }
 
-<<<<<<< HEAD
     @Override
     protected void onPause() {
         super.onPause();
@@ -126,13 +125,6 @@
         b.fabSort.setVisibility(View.GONE);
 //        overridePendingTransition(0,0);
     }
-=======
-//    @Override
-//    protected void onPause() {
-//        super.onPause();
-//        overridePendingTransition(0,0);
-//    }
->>>>>>> WM
 
     public void onClick(View v){ //implements View.OnClickListner 추가 필요
 
